<?php

/**
 * @file
 * Contains functions for OPcache module.
 */

use OPCache\OPCache;
use OPCache\OPCacheConfiguration;
use OPCache\OPCacheStatus;

/**
 * Implements hook_flush_caches().
 */
function opcache_flush_caches() {
  if (!drupal_is_cli()) {
    composer_manager_register_autoloader();
    if (class_exists('\OPCache\OPCache')) {
      $opcache = new OPCache();
      $opcache->cacheClear();
    }
  }
}

/**
 * Implements hook_menu().
 */
function opcache_menu() {
  $items = array(
    'opcache/%/%/reset/%' => array(
      'type' => MENU_CALLBACK,
      'access callback' => 'opcache_router_access',
      'access arguments' => array(1, 2),
      'page callback' => 'opcache_router',
      'page arguments' => array(3, 4),
    ),
    'opcache/%/%/invalidate/%' => array(
      'type' => MENU_CALLBACK,
      'access callback' => 'opcache_router_access',
      'access arguments' => array(1 ,2),
      'page callback' => 'opcache_router',
      'page arguments' => array(3, 4),
    ),
    'opcache/%/%/status' => array(
      'type' => MENU_CALLBACK,
      'access callback' => 'opcache_router_access',
      'access arguments' => array(1, 2),
      'page callback' => 'opcache_router',
      'page arguments' => array(3),
    ),
    'admin/config/development/performance/opcache' => array(
      'type' => MENU_LOCAL_TASK,
      'title' => 'OPcache',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('opcache_admin_form'),
      'access arguments' => array('administer site configuration'),
      'file' => 'opcache.admin.inc',
      'weight' => 10,
    ),
    'admin/config/development/performance/opcache/backends' => array(
      'title' => 'Backends',
      'type' => MENU_DEFAULT_LOCAL_TASK,
      'weight' => -10,
    ),
    'admin/config/development/performance/opcache/status' => array(
      'title' => 'Status',
      'type' => MENU_LOCAL_TASK,
      'page callback' => 'opcache_admin_status',
      'access arguments' => array('administer site configuration'),
      'file' => 'opcache.admin.inc',
      'weight' => 0,
    ),
    'admin/config/development/performance/opcache/configuration' => array(
      'title' => 'Configuration',
      'type' => MENU_LOCAL_TASK,
      'page callback' => 'opcache_admin_config',
      'access arguments' => array('administer site configuration'),
      'file' => 'opcache.admin.inc',
      'weight' => 1,
    ),
    'admin/config/development/performance/opcache/scripts' => array(
      'title' => 'Scripts',
      'type' => MENU_LOCAL_TASK,
      'page callback' => 'opcache_admin_scripts',
      'access arguments' => array('administer site configuration'),
      'file' => 'opcache.admin.inc',
      'weight' => 0,
    ),
 );

  return $items;
}

/**
 * Access callback for OPcache router.
 */
function opcache_router_access($request_time, $token) {
  composer_manager_register_autoloader();
  $opcache = new OPCache();
  if (!$opcache->isEnabled() || REQUEST_TIME - $request_time > 30) {
    return FALSE;
  }

  return $opcache->verifyToken($request_time, $token);
}

/**
 * Page callback for OPcache router.
 */
function opcache_router($operation = 'reset', $arg = FALSE) {
  composer_manager_register_autoloader();
  $opcache = new OPCache();
  if ($operation == 'reset') {
    $opcache->reset($arg);
  }
  elseif ($operation == 'invalidate') {
    $opcache->invalidate($arg);
  }
  elseif ($operation == 'status') {
    print json_encode($opcache->status());
    exit();
  }

  return '';
}
